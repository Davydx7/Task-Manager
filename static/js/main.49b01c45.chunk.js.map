{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","text","color","onClick","type","style","backgroundColor","className","defaultProps","propType","PropTypes","string","func","Header","title","onAdd","showAddState","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","placeholder","value","onChange","target","checked","currentTarget","App","showAdd","setShowAdd","setTasks","Math","floor","random","console","log","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49b01c45.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ text, color, onClick }) => (\r\n  <button type=\"button\" onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\r\n    {text}\r\n  </button>\r\n);\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n  text: 'no text yet',\r\n};\r\n\r\nButton.propType = {\r\n  text: PropTypes.string,\r\n  color: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport Button from './Button';\r\n\r\nconst Header = ({ title, onAdd, showAddState }) => (\r\n  <header className=\"header\">\r\n    <h1>\r\n      {title}\r\n      {' '}\r\n    </h1>\r\n    <Button color={showAddState ? 'red' : 'green'} text={showAddState ? 'Close' : 'Add'} onClick={onAdd} />\r\n  </header>\r\n);\r\n\r\n// CSS in JS\r\n// const defStyles = {\r\n//     color: 'red',\r\n// }\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => (\r\n  <div\r\n    className={`task ${task.reminder ? 'reminder' : ''}`}\r\n    onDoubleClick={() => onToggle(task.id)}\r\n  >\r\n    <h3>\r\n      {task.text}\r\n      {' '}\r\n      <FaTimes\r\n        style={{ color: 'red', cursor: 'pointer' }}\r\n        onClick={() => onDelete(task.id)}\r\n      />\r\n      {' '}\r\n    </h3>\r\n    <p>{task.day}</p>\r\n  </div>\r\n);\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => (\r\n  <>\r\n    {tasks.map((task) => (\r\n      <Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n    ))}\r\n  </>\r\n);\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!text) {\r\n      alert('Please input a task');\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText('');\r\n    setDay('');\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"textInput\">\r\n          Task\r\n          <input\r\n            id=\"textInput\"\r\n            type=\"text\"\r\n            placeholder=\"Add Task\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label htmlFor=\"dayInput\">\r\n          Day & Time\r\n          <input id=\"dayInput\" type=\"text\" placeholder=\"Add Day & Time\" value={day} onChange={(e) => setDay(e.target.value)} />\r\n        </label>\r\n      </div>\r\n      <div className=\"form-control form-control-check\">\r\n        <label htmlFor=\"reminderInput\">\r\n          Set Reminder\r\n          <input id=\"reminderInput\" type=\"checkbox\" checked={reminder} value={reminder} onChange={(e) => setReminder(e.currentTarget.checked)} />\r\n        </label>\r\n      </div>\r\n\r\n      <input className=\"btn btn-block\" type=\"submit\" value=\"save task\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","/* eslint-disable linebreak-style */\r\nimport { useState } from 'react';\r\nimport Header from './components/Header';\r\nimport Tasks from './components/Tasks';\r\nimport AddTask from './components/AddTask';\r\n\r\nfunction App() {\r\n  const [showAdd, setShowAdd] = useState(false);\r\n\r\n  const setShow = () => {\r\n    setShowAdd(!showAdd);\r\n  };\r\n\r\n  const [tasks, setTasks] = useState(\r\n    [\r\n      {\r\n        id: 1,\r\n        text: 'Doctors Appointment',\r\n        day: 'Feb 5th at 2:30pm',\r\n        reminder: true,\r\n      },\r\n      {\r\n        id: 2,\r\n        text: 'Meeting at School',\r\n        day: 'Feb 6th at 1:30pm',\r\n        reminder: true,\r\n      },\r\n      {\r\n        id: 3,\r\n        text: 'Food Shopping',\r\n        day: 'Feb 5th at 3:30pm',\r\n        reminder: false,\r\n      },\r\n    ],\r\n  );\r\n\r\n  // Add Task\r\n  const addTask = (task) => {\r\n    const id = Math.floor(Math.random() * 2000) + 1;\r\n    console.log(id);\r\n    const newTask = { id, ...task };\r\n    setTasks([...tasks, newTask]);\r\n  };\r\n\r\n  // delete Tasks\r\n  const deleteTask = (id) => {\r\n    // console.log('delete', id)\r\n    setTasks(tasks.filter((task) => task.id !== id));\r\n  };\r\n\r\n  // Toggle Reminder\r\n  const toggleReminder = (id) => {\r\n    setTasks(tasks.map((task) => (task.id === id ? { ...task, reminder: !task.reminder } : task)));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Header onAdd={setShow} showAddState={showAdd} />\r\n      {showAdd && <AddTask onAdd={addTask} />}\r\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'no tasks to display'}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}